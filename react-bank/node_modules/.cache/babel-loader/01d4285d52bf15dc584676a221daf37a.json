{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niro\\\\project\\\\bootcamp\\\\personal-exercises\\\\week-8\\\\reactBank\\\\react-bank\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Operetions from './componenets/Opertions';\nimport Transactions from './componenets/transactions';\nimport Transaction from './componenets/transaction'; // import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst axios = require('axios');\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateInfo = newInfo => {\n      const updatedInfo = [...this.state.info];\n      axios.post(\"http://localhost:8000/transaction\", newInfo);\n      updatedInfo.push(newInfo);\n      this.setState({\n        info: updatedInfo\n      });\n    };\n\n    this.delete = id => {\n      axios.delete(`http://localhost:8000/transaction/${id}`);\n      const info = [...this.state.info];\n      info.splice(id, 1);\n      console.log(info);\n      const transactions = this.state.transactions.filter(t => t._id !== id);\n      this.setState({\n        info: info\n      });\n    };\n\n    this.deposit = e => {\n      return console.log(e);\n    };\n\n    this.componentDidMount = async () => {\n      const res = await this.getTransactions();\n      let sum = 0;\n\n      for (let i = 0; i < this.state.info.length; i++) {\n        sum += this.state.info[i].amount;\n      }\n\n      this.setState({\n        info: res.data,\n        balance: sum\n      });\n    };\n\n    this.state = {\n      info: [{\n        amount: 3200,\n        vendor: \"Elevation\",\n        category: \"Salary\"\n      }, {\n        amount: -7,\n        vendor: \"Runescape\",\n        category: \"Entertainment\"\n      }, {\n        amount: -20,\n        vendor: \"Subway\",\n        category: \"Food\"\n      }, {\n        amount: -98,\n        vendor: \"La Baguetterie\",\n        category: \"Food\"\n      }],\n      balance: 0\n    };\n  }\n\n  async getTransactions() {\n    return axios.get(\"http://localhost:8000/transactions\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Balance:\", this.state.balance), React.createElement(Operetions, {\n      update: this.updateInfo,\n      state: this.state.info,\n      deposit: this.deposit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App\",\n      id: \"people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.info.map((i, index) => {\n      return React.createElement(Transactions, {\n        delete: this.delete,\n        key: i.vendor,\n        info: i,\n        id: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Niro/project/bootcamp/personal-exercises/week-8/reactBank/react-bank/src/App.js"],"names":["React","Component","Operetions","Transactions","Transaction","axios","require","App","constructor","updateInfo","newInfo","updatedInfo","state","info","post","push","setState","delete","id","splice","console","log","transactions","filter","t","_id","deposit","e","componentDidMount","res","getTransactions","sum","i","length","amount","data","balance","vendor","category","get","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Operetions from './componenets/Opertions';\nimport Transactions from './componenets/transactions';\nimport Transaction from './componenets/transaction';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst axios = require('axios');\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      info: [\n        { amount: 3200, vendor: \"Elevation\", category: \"Salary\" },\n        { amount: -7, vendor: \"Runescape\", category: \"Entertainment\" },\n        { amount: -20, vendor: \"Subway\", category: \"Food\" },\n        { amount: -98, vendor: \"La Baguetterie\", category: \"Food\" }\n      ],\n      balance: 0\n    }\n\n\n\n  }\n\n  async getTransactions() {\n    return axios.get(\"http://localhost:8000/transactions\")\n  }\n\n  updateInfo = (newInfo) => {\n    const updatedInfo = [...this.state.info]\n    axios.post(\"http://localhost:8000/transaction\", newInfo)\n    updatedInfo.push(newInfo)\n    this.setState({\n      info: updatedInfo\n    })\n\n\n\n  }\n\n  \n  delete = (id) => {\n    axios.delete(`http://localhost:8000/transaction/${id}`)\n    const info = [...this.state.info]\n    info.splice(id, 1)\n    console.log(info);\n    const transactions = this.state.transactions.filter(t => t._id !== id)\n    \n    this.setState({\n      info: info\n    })\n  }\n\n\n\n  deposit = (e) => {\n    return console.log(e);\n\n  }\n\n  componentDidMount = async () => {\n    const res = await this.getTransactions()\n\n    let sum = 0\n    for (let i = 0; i < this.state.info.length; i++) {\n      sum += this.state.info[i].amount\n    }\n    this.setState({\n      info: res.data,\n      balance: sum\n    })\n  }\n\n\n\n\n  render() {\n\n\n    return (\n      <div>\n        <div>Balance:{this.state.balance}</div>\n        <Operetions update={this.updateInfo} state={this.state.info} deposit={this.deposit} />\n        <div className=\"App\" id=\"people\">\n          {this.state.info.map((i, index) => {\n            return <Transactions delete={this.delete} key={i.vendor} info={i} id={index} />\n          })}\n        </div>\n\n      </div >\n\n\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}