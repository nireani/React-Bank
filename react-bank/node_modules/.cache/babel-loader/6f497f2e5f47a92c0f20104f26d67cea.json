{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niro\\\\project\\\\bootcamp\\\\personal-exercises\\\\week-8\\\\reactBank\\\\react-bank\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Operetions from './componenets/Opertions';\nimport Transactions from './componenets/transactions';\nimport Cat from './componenets/Cat'; // import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst axios = require('axios');\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateInfo = newInfo => {\n      axios.post(\"http://localhost:8000/transaction\", newInfo);\n      const updatedInfo = [...this.state.info];\n      updatedInfo.push(newInfo);\n      this.setState({\n        info: updatedInfo\n      });\n    };\n\n    this.delete = id => {\n      console.log(id);\n      axios.delete(`http://localhost:8000/transaction/${id}`);\n      const info = [...this.state.info];\n      info.splice(id, 1);\n      console.log(info);\n      this.setState({\n        info: info\n      });\n    };\n\n    this.deposit = e => {\n      return console.log(e);\n    };\n\n    this.componentDidMount = async () => {\n      const res = await this.getTransactions();\n      let sum = 0;\n\n      for (let i = 0; i < res.data.length; i++) {\n        sum += res.data[i].amount;\n      }\n\n      this.setState({\n        info: res.data,\n        balance: sum\n      });\n    };\n\n    this.state = {\n      info: [{\n        amount: 3200,\n        vendor: \"Elevation\",\n        category: \"Salary\"\n      }, {\n        amount: -7,\n        vendor: \"Runescape\",\n        category: \"Entertainment\"\n      }, {\n        amount: -20,\n        vendor: \"Subway\",\n        category: \"Food\"\n      }, {\n        amount: -98,\n        vendor: \"La Baguetterie\",\n        category: \"Food\"\n      }],\n      balance: 0\n    };\n  }\n\n  async getTransactions() {\n    return await axios.get(\"http://localhost:8000/transactions\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Balance:\", this.state.balance), React.createElement(Operetions, {\n      update: this.updateInfo,\n      state: this.state.info,\n      deposit: this.deposit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App\",\n      id: \"people\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.state.info.map((i, index) => {\n      return React.createElement(Transactions, {\n        delete: this.delete,\n        key: i.vendor,\n        info: i,\n        id: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    }), React.createElement(Cat, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Niro/project/bootcamp/personal-exercises/week-8/reactBank/react-bank/src/App.js"],"names":["React","Component","Operetions","Transactions","Cat","axios","require","App","constructor","updateInfo","newInfo","post","updatedInfo","state","info","push","setState","delete","id","console","log","splice","deposit","e","componentDidMount","res","getTransactions","sum","i","data","length","amount","balance","vendor","category","get","render","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CACA;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAE1BO,EAAAA,WAAW,GAAG;AACZ;;AADY,SAoBdC,UApBc,GAoBFC,OAAD,IAAW;AACpBL,MAAAA,KAAK,CAACM,IAAN,CAAW,mCAAX,EAAgDD,OAAhD;AACJ,YAAME,WAAW,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,IAAf,CAApB;AACAF,MAAAA,WAAW,CAACG,IAAZ,CAAiBL,OAAjB;AAEA,WAAKM,QAAL,CAAc;AACZF,QAAAA,IAAI,EAACF;AADO,OAAd;AAMG,KA/Ba;;AAAA,SAgCdK,MAhCc,GAgCNC,EAAD,IAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEAb,MAAAA,KAAK,CAACY,MAAN,CAAc,qCAAoCC,EAAG,EAArD;AACA,YAAMJ,IAAI,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf,CAAb;AACAA,MAAAA,IAAI,CAACO,MAAL,CAAYH,EAAZ,EAAe,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,WAAKE,QAAL,CAAc;AAClBF,QAAAA,IAAI,EAACA;AADa,OAAd;AAGD,KA3Ca;;AAAA,SA+CdQ,OA/Cc,GA+CJC,CAAD,IAAK;AAChB,aAAOJ,OAAO,CAACC,GAAR,CAAYG,CAAZ,CAAP;AAEG,KAlDa;;AAAA,SAoDbC,iBApDa,GAoDK,YAAU;AAC3B,YAAMC,GAAG,GAAG,MAAM,KAAKC,eAAL,EAAlB;AAEA,UAAIC,GAAG,GAAG,CAAV;;AACA,WAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACH,GAAG,CAACI,IAAJ,CAASC,MAAxB,EAA+BF,CAAC,EAAhC,EAAmC;AACjCD,QAAAA,GAAG,IAAGF,GAAG,CAACI,IAAJ,CAASD,CAAT,EAAYG,MAAlB;AACD;;AACD,WAAKf,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAEW,GAAG,CAACI,IADE;AAEZG,QAAAA,OAAO,EAACL;AAFI,OAAd;AAID,KA/Da;;AAEZ,SAAKd,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AAAEiB,QAAAA,MAAM,EAAE,IAAV;AAAgBE,QAAAA,MAAM,EAAE,WAAxB;AAAqCC,QAAAA,QAAQ,EAAE;AAA/C,OADI,EAEJ;AAAEH,QAAAA,MAAM,EAAE,CAAC,CAAX;AAAcE,QAAAA,MAAM,EAAE,WAAtB;AAAmCC,QAAAA,QAAQ,EAAE;AAA7C,OAFI,EAGJ;AAAEH,QAAAA,MAAM,EAAE,CAAC,EAAX;AAAeE,QAAAA,MAAM,EAAE,QAAvB;AAAiCC,QAAAA,QAAQ,EAAE;AAA3C,OAHI,EAIJ;AAAEH,QAAAA,MAAM,EAAE,CAAC,EAAX;AAAeE,QAAAA,MAAM,EAAE,gBAAvB;AAAyCC,QAAAA,QAAQ,EAAE;AAAnD,OAJI,CADK;AAOjBF,MAAAA,OAAO,EAAE;AAPQ,KAAb;AAYD;;AAED,QAAMN,eAAN,GAAwB;AACtB,WAAO,MAAMrB,KAAK,CAAC8B,GAAN,CAAU,oCAAV,CAAb;AACD;;AAkDDC,EAAAA,MAAM,GAAG;AAGT,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAc,KAAKvB,KAAL,CAAWmB,OAAzB,CADI,EAEJ,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAE,KAAKvB,UAAzB;AAAqC,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,IAAvD;AAA6D,MAAA,OAAO,EAAE,KAAKQ,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,EAGJ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,EAAE,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWC,IAAX,CAAgBuB,GAAhB,CAAoB,CAACT,CAAD,EAAIU,KAAJ,KAAc;AACjC,aAAO,oBAAC,YAAD;AAAc,QAAA,MAAM,EAAE,KAAKrB,MAA3B;AAAmC,QAAA,GAAG,EAAEW,CAAC,CAACK,MAA1C;AAAkD,QAAA,IAAI,EAAEL,CAAxD;AAA2D,QAAA,EAAE,EAAEU,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CADH,EAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAHI,CADJ;AAeC;;AAxFyB;;AA2F5B,eAAe/B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Operetions from './componenets/Opertions';\nimport Transactions from './componenets/transactions';\nimport Cat from './componenets/Cat';\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nconst axios = require('axios');\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      info: [\n        { amount: 3200, vendor: \"Elevation\", category: \"Salary\" },\n        { amount: -7, vendor: \"Runescape\", category: \"Entertainment\" },\n        { amount: -20, vendor: \"Subway\", category: \"Food\" },\n        { amount: -98, vendor: \"La Baguetterie\", category: \"Food\" }\n      ],\nbalance: 0\n    }\n\n\n    \n  }\n\n  async getTransactions() {\n    return await axios.get(\"http://localhost:8000/transactions\")\n  }\n\n  updateInfo=(newInfo)=>{\n    axios.post(\"http://localhost:8000/transaction\", newInfo)\nconst updatedInfo = [...this.state.info]\nupdatedInfo.push(newInfo)\n\nthis.setState({\n  info:updatedInfo\n})\n\n                                                                                         \n\n  }\n  delete=(id)=>{\n    console.log(id);\n    \n    axios.delete(`http://localhost:8000/transaction/${id}`)\n    const info = [...this.state.info]\n    info.splice(id,1)\n    console.log(info);\n    \n    this.setState({\ninfo:info\n    })\n  }\n\n  \n\n  deposit =(e)=>{\nreturn console.log(e);\n\n  }\n\n   componentDidMount=async()=> {\n    const res = await this.getTransactions()\n    \n    let sum = 0 \n    for (let i=0;i<res.data.length;i++){\n      sum+= res.data[i].amount \n    }\n    this.setState({\n      info: res.data,\n      balance:sum\n    })\n  }\n  \n\n  \n\n  render() {\n    \n\n  return(\n      <div>\n  <div>Balance:{this.state.balance}</div>\n  <Operetions update={this.updateInfo} state={this.state.info} deposit={this.deposit} />\n  <div className=\"App\" id=\"people\">\n    {this.state.info.map((i, index) => {\n      return <Transactions delete={this.delete} key={i.vendor} info={i} id={index}/>\n    })}\n    <Cat />\n  </div>\n\n      </div >\n      \n      \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}